# Since .env is gitignored, you can use .env.example to build a new `.env` file when you clone the repo.
# Keep this file up-to-date when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any secrets in it.
# If you are cloning this repo, create a copy of this file named `.env` and populate it with your secrets.

# When adding additional env variables, the schema in /env/schema.mjs should be updated accordingly
# Prisma
DATABASE_URL=mysql://user:password@localhost:3306/db

# Next Auth
# You can generate the secret via 'openssl rand -base64 32' on Linux
# More info: https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET=
NEXTAUTH_URL=http://localhost:3000

# Quenti encryption key
# You can generate the secret via 'openssl rand -base64 24' on Linux
QUENTI_ENCRYPTION_KEY=

# Next Auth Google Provider
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Get your API key on https://resend.com/
RESEND_API_KEY=
# The domain to send emails from
EMAIL_SENDER=
# For testing: send the emails to only Resend
USE_RESEND_PREVIEWS=true

# Allows for testing org features with personal (i.e. gmail.com) accounts, otherwise the domains are blacklisted
BYPASS_ORG_DOMAIN_BLACKLIST=true

# Cortex specific
# If you want to generate proper distractors based on embeddings, add your Cohere API key
# COHERE_API_KEY=
# Quenti uses Huggingface production inference endpoints to compute entailment for grading
# If you want to test Cortex grading functionality, add Huggingface-specific keys
# HUGGINGFACE_ENDPOINT=
# HUGGINGFACE_API_KEY=

METRICS_API_USER=localhost
METRICS_API_PASSWORD=password

NEXT_PUBLIC_APP_URL=http://localhost:3000

# Test background jobs and other Inngest features locally by running 'npx inngest-cli@latest dev'
INNGEST_EVENT_KEY="local"
